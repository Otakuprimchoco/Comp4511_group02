{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LoadService from \"./app/services/LoadService\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      loaded: false\n    };\n    LoadService.load(function (v) {\n      return _this.setState({\n        loaded: true\n      });\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container\n      }, this.state.loaded ? React.createElement(Text, null, \"Open up App.js to start working on your app!\") : React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 100\n        },\n        source: require(\"./assets/logos/logo.png\")\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/user123/Desktop/Comp4511_group02/App.js"],"names":["React","render","LoadService","App","state","loaded","load","v","setState","styles","container","width","height","require","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;;;AAEA,OAAOC,WAAP;;IAEqBC,G;;;;;AAInB,iBAAc;AAAA;;AAAA;;AACZ;AADY,UAHdC,KAGc,GAHN;AACNC,MAAAA,MAAM,EAAE;AADF,KAGM;AAEZH,IAAAA,WAAW,CAACI,IAAZ,CAAiB,UAAAC,CAAC;AAAA,aAAI,MAAKC,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAE;AAAT,OAAd,CAAJ;AAAA,KAAlB;AAFY;AAGb;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,SACG,KAAKN,KAAL,CAAWC,MAAX,GACC,oBAAC,IAAD,uDADD,GAGC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACM,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE;AAArB,SAAd;AAA0C,QAAA,MAAM,EAAEC,OAAO;AAAzD,QAJJ,CADF;AASD;;;;EAnB8Bb,KAAK,CAACc,S;;SAAlBX,G;AAuBrB,IAAMM,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport LoadService from './app/services/LoadService';\n\nexport default class App extends React.Component {\n  state = {\n    loaded: false\n  }\n  constructor() {\n    super();\n    LoadService.load(v => this.setState({loaded: true}));\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        {this.state.loaded ? (\n          <Text>Open up App.js to start working on your app!</Text>\n        ) : (\n          <Image style={{width: 100, height: 100,}} source={require('./assets/logos/logo.png')} />\n        )}\n      </View>\n    );\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}